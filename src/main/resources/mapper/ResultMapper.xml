<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chen.base.mapper.ResultMapper">
  <resultMap id="BaseResultMap" type="com.chen.base.entity.Result">
    <!--
    该方法由生成器生成,请勿修改
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="flight_id" jdbcType="VARCHAR" property="flightId" />
    <result column="callsign" jdbcType="VARCHAR" property="callsign" />
    <result column="acf_type" jdbcType="VARCHAR" property="acfType" />
    <result column="reg" jdbcType="VARCHAR" property="reg" />
    <result column="dep_addr" jdbcType="VARCHAR" property="depAddr" />
    <result column="arr_addr" jdbcType="VARCHAR" property="arrAddr" />
    <result column="etd" jdbcType="TIMESTAMP" property="etd" />
    <result column="eta" jdbcType="TIMESTAMP" property="eta" />
    <result column="atd" jdbcType="TIMESTAMP" property="atd" />
    <result column="ata" jdbcType="TIMESTAMP" property="ata" />
    <result column="flight_state" jdbcType="VARCHAR" property="flightState" />
    <result column="business_income" jdbcType="DECIMAL" property="businessIncome" />
    <result column="fuel_cost" jdbcType="DECIMAL" property="fuelCost" />
    <result column="co2_emissions" jdbcType="DECIMAL" property="co2Emissions" />
    <result column="cancel_loss_cost" jdbcType="DECIMAL" property="cancelLossCost" />
    <result column="return_loss_cost" jdbcType="DECIMAL" property="returnLossCost" />
    <result column="air_delay_loss_cost" jdbcType="DECIMAL" property="airDelayLossCost" />
    <result column="time_value_cost" jdbcType="DECIMAL" property="timeValueCost" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
    该方法由生成器生成,请勿修改
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{item.criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{item.criterion.value} and #{item.criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{item.listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
    该方法由生成器生成,请勿修改
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{item.criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{item.criterion.value} and #{item.criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{item.listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
    该方法由生成器生成,请勿修改
    -->
    id, flight_id, callsign, acf_type, reg, dep_addr, arr_addr, etd, eta, atd, ata, flight_state, 
    business_income, fuel_cost, co2_emissions, cancel_loss_cost, return_loss_cost, air_delay_loss_cost, 
    time_value_cost
  </sql>
  <select id="selectByExample" parameterType="com.chen.base.entity.ResultExample" resultMap="BaseResultMap">
    <!--
    该方法由生成器生成,请勿修改
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
    该方法由生成器生成,请勿修改
    -->
    select 
    <include refid="Base_Column_List" />
    from result
    where id = #{item.id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
    该方法由生成器生成,请勿修改
    -->
    delete from result
    where id = #{item.id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.chen.base.entity.ResultExample">
    <!--
    该方法由生成器生成,请勿修改
    -->
    delete from result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chen.base.entity.Result">
    <!--
    该方法由生成器生成,请勿修改
    -->
    insert into result (id, flight_id, callsign, 
      acf_type, reg, dep_addr, 
      arr_addr, etd, eta, 
      atd, ata, flight_state, 
      business_income, fuel_cost, co2_emissions, 
      cancel_loss_cost, return_loss_cost, air_delay_loss_cost, 
      time_value_cost)
    values (#{item.id,jdbcType=INTEGER}, #{item.flightId,jdbcType=VARCHAR}, #{item.callsign,jdbcType=VARCHAR}, 
      #{item.acfType,jdbcType=VARCHAR}, #{item.reg,jdbcType=VARCHAR}, #{item.depAddr,jdbcType=VARCHAR}, 
      #{item.arrAddr,jdbcType=VARCHAR}, #{item.etd,jdbcType=TIMESTAMP}, #{item.eta,jdbcType=TIMESTAMP}, 
      #{item.atd,jdbcType=TIMESTAMP}, #{item.ata,jdbcType=TIMESTAMP}, #{item.flightState,jdbcType=VARCHAR}, 
      #{item.businessIncome,jdbcType=DECIMAL}, #{item.fuelCost,jdbcType=DECIMAL}, #{item.co2Emissions,jdbcType=DECIMAL}, 
      #{item.cancelLossCost,jdbcType=DECIMAL}, #{item.returnLossCost,jdbcType=DECIMAL}, #{item.airDelayLossCost,jdbcType=DECIMAL}, 
      #{item.timeValueCost,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.chen.base.entity.Result">
    <!--
    该方法由生成器生成,请勿修改
    -->
    insert into result
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="flightId != null">
        flight_id,
      </if>
      <if test="callsign != null">
        callsign,
      </if>
      <if test="acfType != null">
        acf_type,
      </if>
      <if test="reg != null">
        reg,
      </if>
      <if test="depAddr != null">
        dep_addr,
      </if>
      <if test="arrAddr != null">
        arr_addr,
      </if>
      <if test="etd != null">
        etd,
      </if>
      <if test="eta != null">
        eta,
      </if>
      <if test="atd != null">
        atd,
      </if>
      <if test="ata != null">
        ata,
      </if>
      <if test="flightState != null">
        flight_state,
      </if>
      <if test="businessIncome != null">
        business_income,
      </if>
      <if test="fuelCost != null">
        fuel_cost,
      </if>
      <if test="co2Emissions != null">
        co2_emissions,
      </if>
      <if test="cancelLossCost != null">
        cancel_loss_cost,
      </if>
      <if test="returnLossCost != null">
        return_loss_cost,
      </if>
      <if test="airDelayLossCost != null">
        air_delay_loss_cost,
      </if>
      <if test="timeValueCost != null">
        time_value_cost,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{item.id,jdbcType=INTEGER},
      </if>
      <if test="flightId != null">
        #{item.flightId,jdbcType=VARCHAR},
      </if>
      <if test="callsign != null">
        #{item.callsign,jdbcType=VARCHAR},
      </if>
      <if test="acfType != null">
        #{item.acfType,jdbcType=VARCHAR},
      </if>
      <if test="reg != null">
        #{item.reg,jdbcType=VARCHAR},
      </if>
      <if test="depAddr != null">
        #{item.depAddr,jdbcType=VARCHAR},
      </if>
      <if test="arrAddr != null">
        #{item.arrAddr,jdbcType=VARCHAR},
      </if>
      <if test="etd != null">
        #{item.etd,jdbcType=TIMESTAMP},
      </if>
      <if test="eta != null">
        #{item.eta,jdbcType=TIMESTAMP},
      </if>
      <if test="atd != null">
        #{item.atd,jdbcType=TIMESTAMP},
      </if>
      <if test="ata != null">
        #{item.ata,jdbcType=TIMESTAMP},
      </if>
      <if test="flightState != null">
        #{item.flightState,jdbcType=VARCHAR},
      </if>
      <if test="businessIncome != null">
        #{item.businessIncome,jdbcType=DECIMAL},
      </if>
      <if test="fuelCost != null">
        #{item.fuelCost,jdbcType=DECIMAL},
      </if>
      <if test="co2Emissions != null">
        #{item.co2Emissions,jdbcType=DECIMAL},
      </if>
      <if test="cancelLossCost != null">
        #{item.cancelLossCost,jdbcType=DECIMAL},
      </if>
      <if test="returnLossCost != null">
        #{item.returnLossCost,jdbcType=DECIMAL},
      </if>
      <if test="airDelayLossCost != null">
        #{item.airDelayLossCost,jdbcType=DECIMAL},
      </if>
      <if test="timeValueCost != null">
        #{item.timeValueCost,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chen.base.entity.ResultExample" resultType="java.lang.Long">
    <!--
    该方法由生成器生成,请勿修改
    -->
    select count(*) from result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
    该方法由生成器生成,请勿修改
    -->
    update result
    <set>
      <if test="record.id != null">
        id = #{item.record.id,jdbcType=INTEGER},
      </if>
      <if test="record.flightId != null">
        flight_id = #{item.record.flightId,jdbcType=VARCHAR},
      </if>
      <if test="record.callsign != null">
        callsign = #{item.record.callsign,jdbcType=VARCHAR},
      </if>
      <if test="record.acfType != null">
        acf_type = #{item.record.acfType,jdbcType=VARCHAR},
      </if>
      <if test="record.reg != null">
        reg = #{item.record.reg,jdbcType=VARCHAR},
      </if>
      <if test="record.depAddr != null">
        dep_addr = #{item.record.depAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.arrAddr != null">
        arr_addr = #{item.record.arrAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.etd != null">
        etd = #{item.record.etd,jdbcType=TIMESTAMP},
      </if>
      <if test="record.eta != null">
        eta = #{item.record.eta,jdbcType=TIMESTAMP},
      </if>
      <if test="record.atd != null">
        atd = #{item.record.atd,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ata != null">
        ata = #{item.record.ata,jdbcType=TIMESTAMP},
      </if>
      <if test="record.flightState != null">
        flight_state = #{item.record.flightState,jdbcType=VARCHAR},
      </if>
      <if test="record.businessIncome != null">
        business_income = #{item.record.businessIncome,jdbcType=DECIMAL},
      </if>
      <if test="record.fuelCost != null">
        fuel_cost = #{item.record.fuelCost,jdbcType=DECIMAL},
      </if>
      <if test="record.co2Emissions != null">
        co2_emissions = #{item.record.co2Emissions,jdbcType=DECIMAL},
      </if>
      <if test="record.cancelLossCost != null">
        cancel_loss_cost = #{item.record.cancelLossCost,jdbcType=DECIMAL},
      </if>
      <if test="record.returnLossCost != null">
        return_loss_cost = #{item.record.returnLossCost,jdbcType=DECIMAL},
      </if>
      <if test="record.airDelayLossCost != null">
        air_delay_loss_cost = #{item.record.airDelayLossCost,jdbcType=DECIMAL},
      </if>
      <if test="record.timeValueCost != null">
        time_value_cost = #{item.record.timeValueCost,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
    该方法由生成器生成,请勿修改
    -->
    update result
    set id = #{item.record.id,jdbcType=INTEGER},
      flight_id = #{item.record.flightId,jdbcType=VARCHAR},
      callsign = #{item.record.callsign,jdbcType=VARCHAR},
      acf_type = #{item.record.acfType,jdbcType=VARCHAR},
      reg = #{item.record.reg,jdbcType=VARCHAR},
      dep_addr = #{item.record.depAddr,jdbcType=VARCHAR},
      arr_addr = #{item.record.arrAddr,jdbcType=VARCHAR},
      etd = #{item.record.etd,jdbcType=TIMESTAMP},
      eta = #{item.record.eta,jdbcType=TIMESTAMP},
      atd = #{item.record.atd,jdbcType=TIMESTAMP},
      ata = #{item.record.ata,jdbcType=TIMESTAMP},
      flight_state = #{item.record.flightState,jdbcType=VARCHAR},
      business_income = #{item.record.businessIncome,jdbcType=DECIMAL},
      fuel_cost = #{item.record.fuelCost,jdbcType=DECIMAL},
      co2_emissions = #{item.record.co2Emissions,jdbcType=DECIMAL},
      cancel_loss_cost = #{item.record.cancelLossCost,jdbcType=DECIMAL},
      return_loss_cost = #{item.record.returnLossCost,jdbcType=DECIMAL},
      air_delay_loss_cost = #{item.record.airDelayLossCost,jdbcType=DECIMAL},
      time_value_cost = #{item.record.timeValueCost,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chen.base.entity.Result">
    <!--
    该方法由生成器生成,请勿修改
    -->
    update result
    <set>
      <if test="flightId != null">
        flight_id = #{item.flightId,jdbcType=VARCHAR},
      </if>
      <if test="callsign != null">
        callsign = #{item.callsign,jdbcType=VARCHAR},
      </if>
      <if test="acfType != null">
        acf_type = #{item.acfType,jdbcType=VARCHAR},
      </if>
      <if test="reg != null">
        reg = #{item.reg,jdbcType=VARCHAR},
      </if>
      <if test="depAddr != null">
        dep_addr = #{item.depAddr,jdbcType=VARCHAR},
      </if>
      <if test="arrAddr != null">
        arr_addr = #{item.arrAddr,jdbcType=VARCHAR},
      </if>
      <if test="etd != null">
        etd = #{item.etd,jdbcType=TIMESTAMP},
      </if>
      <if test="eta != null">
        eta = #{item.eta,jdbcType=TIMESTAMP},
      </if>
      <if test="atd != null">
        atd = #{item.atd,jdbcType=TIMESTAMP},
      </if>
      <if test="ata != null">
        ata = #{item.ata,jdbcType=TIMESTAMP},
      </if>
      <if test="flightState != null">
        flight_state = #{item.flightState,jdbcType=VARCHAR},
      </if>
      <if test="businessIncome != null">
        business_income = #{item.businessIncome,jdbcType=DECIMAL},
      </if>
      <if test="fuelCost != null">
        fuel_cost = #{item.fuelCost,jdbcType=DECIMAL},
      </if>
      <if test="co2Emissions != null">
        co2_emissions = #{item.co2Emissions,jdbcType=DECIMAL},
      </if>
      <if test="cancelLossCost != null">
        cancel_loss_cost = #{item.cancelLossCost,jdbcType=DECIMAL},
      </if>
      <if test="returnLossCost != null">
        return_loss_cost = #{item.returnLossCost,jdbcType=DECIMAL},
      </if>
      <if test="airDelayLossCost != null">
        air_delay_loss_cost = #{item.airDelayLossCost,jdbcType=DECIMAL},
      </if>
      <if test="timeValueCost != null">
        time_value_cost = #{item.timeValueCost,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{item.id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chen.base.entity.Result">
    <!--
    该方法由生成器生成,请勿修改
    -->
    update result
    set flight_id = #{item.flightId,jdbcType=VARCHAR},
      callsign = #{item.callsign,jdbcType=VARCHAR},
      acf_type = #{item.acfType,jdbcType=VARCHAR},
      reg = #{item.reg,jdbcType=VARCHAR},
      dep_addr = #{item.depAddr,jdbcType=VARCHAR},
      arr_addr = #{item.arrAddr,jdbcType=VARCHAR},
      etd = #{item.etd,jdbcType=TIMESTAMP},
      eta = #{item.eta,jdbcType=TIMESTAMP},
      atd = #{item.atd,jdbcType=TIMESTAMP},
      ata = #{item.ata,jdbcType=TIMESTAMP},
      flight_state = #{item.flightState,jdbcType=VARCHAR},
      business_income = #{item.businessIncome,jdbcType=DECIMAL},
      fuel_cost = #{item.fuelCost,jdbcType=DECIMAL},
      co2_emissions = #{item.co2Emissions,jdbcType=DECIMAL},
      cancel_loss_cost = #{item.cancelLossCost,jdbcType=DECIMAL},
      return_loss_cost = #{item.returnLossCost,jdbcType=DECIMAL},
      air_delay_loss_cost = #{item.airDelayLossCost,jdbcType=DECIMAL},
      time_value_cost = #{item.timeValueCost,jdbcType=DECIMAL}
    where id = #{item.id,jdbcType=INTEGER}
  </update>
    <update id="bathInsert" parameterType="java.util.List">
      insert into result ( flight_id, callsign,
                          acf_type, reg, dep_addr,
                          arr_addr, etd, eta, atd,
                          ata, flight_state, business_income,
                          fuel_cost, co2_emissions, cancel_loss_cost,
                          return_loss_cost, air_delay_loss_cost, time_value_cost
      )
      values
      <foreach collection="list" item="item" index="index" separator="," >
        (#{item.flightId,jdbcType=VARCHAR}, #{item.callsign,jdbcType=VARCHAR},
        #{item.acfType,jdbcType=VARCHAR}, #{item.reg,jdbcType=VARCHAR}, #{item.depAddr,jdbcType=VARCHAR},
        #{item.arrAddr,jdbcType=VARCHAR}, #{item.etd,jdbcType=TIMESTAMP}, #{item.eta,jdbcType=TIMESTAMP},
        #{item.atd,jdbcType=TIMESTAMP}, #{item.ata,jdbcType=TIMESTAMP}, #{item.flightState,jdbcType=VARCHAR},
        #{item.businessIncome,jdbcType=DECIMAL}, #{item.fuelCost,jdbcType=DECIMAL}, #{item.co2Emissions,jdbcType=DECIMAL},
        #{item.cancelLossCost,jdbcType=DECIMAL}, #{item.returnLossCost,jdbcType=DECIMAL}, #{item.airDelayLossCost,jdbcType=DECIMAL},
        #{item.timeValueCost,jdbcType=DECIMAL})
      </foreach>

    </update>
</mapper>